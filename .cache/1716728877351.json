{"date":"2024-05-26T13:07:52.822Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":2646,"content":"#include \"../includes/get.hpp\"\n\nGet::Get() : Method()\n{\n}\n\nGet::~Get()\n{\n}\n\nvoid Get::identify_command(string line, vector<User *> &users, User *&currentUser, int &lessonID_,\n                           vector<Lesson *> &lessons, vector<Course *> &courses, vector<Major *> &majors)\n{\n    istringstream iss(line);\n    string command;\n    iss >> command;\n    size_t i = line.find(\"?\");\n    if (i != string::npos)\n    {\n        line = line.substr(i + 2);\n    }\n\n    else\n    {\n        throw BadRequest();\n    }\n\n    istringstream iss2(line);\n    string title;\n    string key;\n    iss2 >> title;\n    iss2 >> key;\n    if (command == \"courses\")\n    {\n        if (line == EMPTY)\n        {\n            show_all_lessons(lessons, courses);\n        }\n\n        else\n        {\n            if (title == \"id\")\n            {\n                if (!can_convert_to_int(key))\n                {\n                    throw BadRequest();\n                }\n\n                if (!lesson_exists(stoi(key), lessons))\n                {\n                    throw Absence();\n                }\n\n                Lesson *chosenLesson = find_lesson_by_id(lessons, key);\n                chosenLesson->show_detailed();\n            }\n            else\n            {\n                throw BadRequest();\n            }\n        }\n    }\n\n    else if (command == \"personal_page\")\n    {\n        if (line == EMPTY)\n        {\n            throw BadRequest();\n        }\n\n        if (currentUser == nullptr)\n        {\n            throw Inaccessibility();\n        }\n\n        else\n        {\n            if (title == \"id\")\n            {\n                if (!can_convert_to_int(key))\n                {\n                    throw BadRequest();\n                }\n\n                if (!user_exists(key, users))\n                {\n                    throw Absence();\n                }\n\n                User *chosenUser = find_user_by_id(key, users);\n                chosenUser->show_personal_page();\n            }\n\n            else\n            {\n                throw BadRequest();\n            }\n        }\n    }\n\n    else if (command == \"post\")\n    {\n        Argument user;\n        Argument post;\n        vector<string> parts = split(line, SPACE);\n\n        if (currentUser == nullptr)\n        {\n            throw Inaccessibility();\n        }\n\n        if (parts[0] == \"id\")\n        {\n            user.title = parts[0];\n            user.key = parts[1];\n            if (parts[2] == \"post_id\")\n            {\n                post.title = parts[2];\n                post.key = parts[3];\n            }\n            else\n            {\n                throw BadRequest();\n            }\n        }\n\n        else if (parts[0] == \"post_id\")\n        {\n            post.title = parts[0];\n            post.key = parts[1];\n            if (parts[2] == \"id\")\n            {\n                user.title = parts[2];\n                user.key = parts[3];\n            }\n            else\n            {\n                throw BadRequest();\n            }\n        }\n\n        if (!user_exists(user.key, users))\n        {\n            throw Absence();\n        }\n\n        User *chosenUser = find_user_by_id(user.key, users);\n\n        if (!can_convert_to_int(post.key) || !can_convert_to_int(user.key))\n        {\n            throw BadRequest();\n        }\n\n        if (!chosenUser->have_this_post(stoi(post.key)))\n        {\n            throw Absence();\n        }\n\n        show_post(chosenUser, stoi(post.key));\n    }\n\n    else if (command == \"notification\")\n    {\n        handle_notif(line, currentUser);\n    }\n\n    else if (command == \"my_courses\")\n    {\n        if (currentUser == nullptr)\n        {\n            throw Inaccessibility();\n        }\n\n        if(currentUser->no_active_lessons()){\n            throw EmptyException();\n        }\n\n        \n    }\n\n    else\n    {\n        throw Absence();\n    }\n}\n\nvoid Get::show_all_lessons(vector<Lesson *> &lessons, vector<Course *> &courses)\n{\n    if (lessons.size() != 0)\n    {\n        for (Lesson *l : lessons)\n        {\n            l->show();\n        }\n    }\n\n    else\n    {\n        throw EmptyException();\n    }\n}\n\nvoid Get::show_post(User *chosenUser, int postID_)\n{\n    chosenUser->show_personal_info();\n    chosenUser->show_post(postID_);\n}\n\nvoid Get::handle_notif(string line, User* &currentUser)\n{\n    if (currentUser == nullptr)\n    {\n        throw Inaccessibility();\n    }\n\n    if (line != EMPTY)\n    {\n        throw BadRequest();\n    }\n\n    currentUser->display_all_notifs();\n}","filename":"/home/ali3ad3ghi/project6-f1/UTMS-Website/src/get.cpp","identifier":"Text Change","lineCount":222,"languageId":"cpp"},"failed":false}