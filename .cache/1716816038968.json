{"date":"2024-05-27T13:20:37.361Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"content":"#include \"../includes/delete.hpp\"\n\nDelete::Delete() : Method()\n{\n}\n\nDelete::~Delete()\n{\n}\n\nvoid Delete::identify_command(string line, vector<User *> &users, User *&currentUser, int &lessonID_,\n                              vector<Lesson *> &lessons, vector<Course *> &courses, vector<Major *> &majors)\n{\n    istringstream iss(line);\n    string command;\n    iss >> command;\n    size_t i = line.find(\"?\");\n    if (i != string::npos)\n    {\n        line = line.substr(i + 2);\n    }\n\n    else\n    {\n        throw BadRequest();\n    }\n\n    istringstream iss2(line);\n    if (command == \"post\")\n    {\n        handle_post(line, users, currentUser, lessonID_, lessons, courses, majors, iss2);\n    }\n\n    else if (command == \"my_courses\")\n    {\n        handle_my_courses(line, users, currentUser, lessonID_, lessons, courses, majors, iss2);\n    }\n\n    else\n    {\n        throw Absence();\n    }\n}\n\nvoid Delete::handle_post(string line, vector<User *> &users, User *&currentUser, int &lessonID_,\n                         vector<Lesson *> &lessons, vector<Course *> &courses, vector<Major *> &majors, istringstream &iss2)\n{\n    string title;\n    string key;\n    iss2 >> title;\n    iss2 >> key;\n    if (line == EMPTY)\n    {\n        throw Absence();\n    }\n\n    else\n    {\n        if (title == \"id\")\n        {\n            if (!can_convert_to_int(key))\n            {\n                throw BadRequest();\n            }\n\n            currentUser->delete_post(stoi(key));\n            cout << \"OK\" << endl;\n        }\n\n        else\n        {\n            throw BadRequest();\n        }\n    }\n}\n\nvoid Delete::handle_my_courses(string line, vector<User *> &users, User *&currentUser, int &lessonID_,\n                               vector<Lesson *> &lessons, vector<Course *> &courses, vector<Major *> &majors, istringstream &iss2)\n{\n    string title;\n    string key;\n    iss2 >> title;\n    iss2 >> key;\n    if (currentUser == nullptr)\n    {\n        throw Inaccessibility();\n    }\n\n    if (title == \"id\")\n    {\n        if (!can_convert_to_int(key))\n        {\n            throw BadRequest();\n        }\n\n        if (!lesson_exists(stoi(key), lessons))\n        {\n            throw Absence();\n        }\n\n        Lesson *chosenLesson = find_lesson_by_id(lessons, key);\n\n        Student *currentStudent = dynamic_cast<Student *>(currentUser);\n\n        if (currentStudent)\n        {\n            if (!currentStudent->have_this_lesson(stoi(key)))\n            {\n                throw Absence();\n            }\n\n            currentStudent->delete_lesson(stoi(key));\n            Notification newNotif = construct_notif(currentStudent, DELETE_COURSE_NOTIF);\n            currentStudent->send_notif(newNotif);\n            cout << \"OK\" << endl;\n        }\n    }\n\n    else{\n        throw BadRequest();\n    }\n}","filename":"/home/ali3ad3ghi/project6-f1/UTMS-Website/src/delete.cpp","identifier":"Save Document","languageId":"cpp","version":418,"lineCount":122},"failed":true}