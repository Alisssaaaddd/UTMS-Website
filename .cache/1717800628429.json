{"date":"2024-06-07T22:50:27.935Z","courseId":"17","assignment":"AP-Spring03-CA6-phase2","trace":{"version":122,"content":"#pragma once\n\n#include \"../includes/consts.hpp\"\n#include \"../includes/error.hpp\"\n#include \"../includes/user.hpp\"\n#include \"../includes/major.hpp\"\n\nclass Method\n{\nprotected:\n    vector<string> commands;\n\npublic:\n    Method();\n    ~Method();\n    virtual void identify_command(string line, vector<User *> &users, User *&currentUser, int &lessonID_,\n                                  vector<Lesson *> &lessons, vector<Course *> &courses, vector<Major *> &majors);\n    vector<string> split(const string &str, const char delim);\n    User *find_user_by_id(string id, vector<User *> &users);\n    Course *find_course_by_id(vector<Course *> &courses, string courseId);\n    Lesson* find_lesson_by_id(vector<Lesson *> &Lessons, string lessonID);\n    bool can_convert_to_int(const std::string &str);\n    bool lesson_exists(int lessonID, vector<Lesson* > &lessons);\n    bool user_exists(string userId, vector<User *> users);\n    Notification construct_notif(User* userData ,string message);\n    bool all_is_space(const std::string& line);\n    void check_question_mark(string &line);\n    void successful_request();\n    string image_format(string line);\n    void check_lesson_existance(int lessonID_, vector<Lesson*> &lessons);\n    void check_natural_number(string &id);\n    void check_next_is_nothing(istringstream &iss, string end);\n    void check_next_is_something(string line);\n    void check_user_loged_in(User*& currentUser);\n    void restrict_admin(User* &currentUser);\n    void restrict_students(User*& currentUser);\n};\n","filename":"/home/ali3ad3ghi/project6-f1/UTMS-Website/includes/method.hpp","identifier":"Text Change","lineCount":38,"languageId":"cpp"},"failed":true}