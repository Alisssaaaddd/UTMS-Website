{"date":"2024-05-25T14:02:53.658Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":79,"content":"#include \"../includes/delete.hpp\"\n\nDelete::Delete() : Method() {\n\n}\n\nDelete::~Delete(){\n\n}\n\nvoid Delete::identify_command(string line, vector<User *> &users, User *&currentUser, int &lessonID_,\n                            vector<Lesson *> &lessons, vector<Course *> &courses, vector<Major *> &majors)\n{\n    istringstream iss(line);\n    string command;\n    iss >> command;\n    size_t i = line.find(\"?\");\n    if (i != string::npos)\n    {\n        line = line.substr(i + 2);\n    }\n\n    else\n    {\n        throw BadRequest();\n    }\n\n    istringstream iss2(line);\n    if (command == \"post\")\n    {\n        Argument id;\n        Argument password;\n        string title;\n        string key;\n        string end;\n        iss2 >> title;\n\n        if (title == \"id\")\n        {\n            iss2 >> key;\n            id.title = title;\n            id.key = key;\n\n            iss2 >> title;\n            password.title = title;\n            iss2 >> key;\n            password.key = key;\n\n            iss2 >> end;\n            if (end != EMPTY)\n                throw BadRequest();\n        }\n\n        else if (title == \"password\")\n        {\n            iss2 >> key;\n            password.title = title;\n            password.key = key;\n\n            iss2 >> title;\n            id.title = title;\n            iss2 >> key;\n            id.key = key;\n\n            iss2 >> end;\n            if (end != EMPTY)\n                throw BadRequest();\n        }\n\n        else\n        {\n            throw BadRequest();\n        }\n\n    }\n\n    else if (command == \"my_courses\")\n    {\n\n    }\n\n    else if (command == \"post\")\n    {\n        PostStruct post;\n        string title1;\n        iss2 >> title1;\n\n        if (title1 == \"title\")\n        {\n            size_t i = line.find(DOUNLE_QUOTATION);\n            line = line.substr(i + 1);\n            cout << \"line Jadid: \" << line << endl;\n            istringstream iss3(line);\n            string temp;\n            getline(iss3, temp, DOUNLE_QUOTATION);\n            post.title = temp;\n            i = line.find(DOUNLE_QUOTATION);\n            line = line.substr(i + 1);\n\n            istringstream iss4(line);\n            iss4 >> temp;\n            if (temp == \"message\")\n            {\n                i = line.find(DOUNLE_QUOTATION);\n                line = line.substr(i + 1);\n                cout << \"line Jadid: \" << line << endl;\n                istringstream iss5(line);\n                getline(iss5, temp, DOUNLE_QUOTATION);\n                post.message = temp;\n            }\n            else\n            {\n                throw BadRequest();\n            }\n        }\n\n        else if (title1 == \"message\")\n        {\n            size_t i = line.find(DOUNLE_QUOTATION);\n            line = line.substr(i + 1);\n            istringstream iss3(line);\n            string temp;\n            getline(iss3, temp, DOUNLE_QUOTATION);\n            post.message = temp;\n            i = line.find(DOUNLE_QUOTATION);\n            line = line.substr(i + 1);\n\n            istringstream iss4(line);\n            iss4 >> temp;\n            if (temp == \"title\")\n            {\n                i = line.find(DOUNLE_QUOTATION);\n                line = line.substr(i + 1);\n                istringstream iss5(line);\n                getline(iss5, temp, DOUNLE_QUOTATION);\n                post.title = temp;\n            }\n            else\n            {\n                throw BadRequest();\n            }\n        }\n\n        else\n        {\n            throw BadRequest();\n        }\n\n        post.id = currentUser->get_postID();\n        currentUser->add_post(post);\n        cout << \"OK\" << endl;\n        cout << post.id << \" \" << post.title << \" \" << post.message << endl;\n    }\n\n    else if (command == \"connect\")\n    {\n    }\n\n    else if (command == \"course_offer\")\n    {\n        vector<string> parts = split(line, SPACE);\n        LessonStruct lesson;\n        lesson.lessonID = lessonID_;\n\n        if (parts.size() != 12)\n        {\n            throw BadRequest();\n        }\n\n        for (int i = 0; i < parts.size(); i += 2)\n        {\n            if (parts[i] == \"course_id\")\n            {\n                if (course_exists(parts[i + 1], courses))\n                {\n                    lesson.courseId = parts[i + 1];\n                    Course *relatedCourse = find_course_by_id(courses, lesson.courseId);\n                    lesson.courseName = relatedCourse->get_name();\n                }\n                else\n                {\n                    throw Absence();\n                }\n            }\n\n            else if (parts[i] == \"professor_id\")\n            {\n                if (user_exists(parts[i + 1], users))\n                {\n                    lesson.profId = parts[i + 1];\n                    User *prof = find_user_by_id(lesson.profId, users);\n                    lesson.profName = prof->get_name();\n                }\n                else\n                {\n                    throw Absence();\n                }\n            }\n\n            else if (parts[i] == \"capacity\")\n            {\n                lesson.capacity = parts[i + 1];\n            }\n\n            else if (parts[i] == \"time\")\n            {\n                lesson.weekDay = parts[i + 1];\n                vector<string> timeParts = split(lesson.weekDay, ':');\n                lesson.weekDay = timeParts[0];\n                vector<string> hourParts = split(timeParts[1], '-');\n                lesson.startTime = hourParts[0];\n                lesson.endTime = hourParts[1];\n            }\n\n            else if (parts[i] == \"exam_date\")\n            {\n                lesson.date = parts[i + 1];\n            }\n\n            else if (parts[i] == \"class_number\")\n            {\n                lesson.classNumber = parts[i + 1];\n            }\n        }\n        course_offer(lesson, lessonID_, currentUser, lessons, courses, majors, users);\n    }\n\n    else\n    {\n        throw Absence();\n    }\n}\n\n","filename":"/home/ali3ad3ghi/project6-f1/UTMS-Website/src/delete.cpp","identifier":"Text Change","lineCount":234,"languageId":"cpp"},"failed":false}