{"date":"2024-06-03T14:02:28.062Z","courseId":"17","assignment":"AP-Spring03-CA6-phase2","trace":{"content":"\n#include \"../includes/lesson.hpp\"\n\nLesson::Lesson(LessonStruct ls, int &lessonId_current)\n{\n    courseName = ls.courseName;\n    profName = ls.profName;\n    courseId = ls.courseId;\n    profId = ls.profId;\n    capacity = ls.capacity;\n    time.weekDay = ls.weekDay;\n    time.startTime = ls.startTime;\n    time.endTime = ls.endTime;\n    date = ls.date;\n    classNumber = ls.classNumber;\n    lessonID = ls.lessonID;\n    majorsId = ls.majors_id;\n    prereq = ls.prereq;\n    postID = 1;\n}\n\nLesson::~Lesson()\n{\n}\n\nstring Lesson::get_course_name() { return courseName; };\nstring Lesson::get_prof_name() { return profName; };\nstring Lesson::get_course_id() { return courseId; };\nstring Lesson::get_prof_id() {return profId; };\nstring Lesson::get_capacity() { return capacity; };\nstring Lesson::get_week_day() { return time.weekDay; };\nstring Lesson::get_prereq() { return prereq; };\nstring Lesson::get_start_time() { return time.startTime; };\nstring Lesson::get_end_time() { return time.endTime; };\nint Lesson::get_class_num() { return stoi(classNumber); };\nstring Lesson::get_date() { return date; };\nint Lesson::get_lessonID() { return lessonID; };\n\nvoid Lesson::show()\n{\n    cout << lessonID << SPACE << courseName << SPACE << capacity << SPACE << profName << endl;\n}\n\nvoid Lesson::show_detailed()\n{\n    cout << lessonID << SPACE << courseName << SPACE << capacity << SPACE << profName << SPACE << time.weekDay << COLON << time.startTime << HYPHEN << time.endTime << SPACE << date << SPACE << classNumber << endl;\n}\n\nbool Lesson::can_accept_this_major(string majorID_)\n{\n    for (auto m : majorsId)\n    {\n        if (m == majorID_)\n            return true;\n    }\n    return false;\n}\n\nvoid Lesson::display(){\n    cout << lessonID << SPACE << courseName << SPACE <<\n    capacity << SPACE << profName << SPACE << time.weekDay << COLON <<\n    time.startTime << HYPHEN << time.endTime << SPACE << date << SPACE << classNumber << endl;\n}\n\nbool Lesson::is_TA(string studentID)\n{\n    for(auto ta_id: TA_IDs){\n        if(ta_id==studentID) return true;\n    }\n    return false;\n}\n\nvoid Lesson::add_post_to_channel(PostStruct &newPost){\n    newPost.id = postID;\n    informing_channel.push_back(newPost);\n    postID++;\n}\n\nvoid Lesson::show_channel(){\n    show_detailed();\n    for(int i=)\n}","filename":"/home/ali3ad3ghi/project6-f1/UTMS-Website/src/lesson.cpp","identifier":"Save Document","languageId":"cpp","version":340,"lineCount":82},"failed":false}