{"date":"2024-06-04T17:32:17.428Z","courseId":"17","assignment":"AP-Spring03-CA6-phase2","trace":{"version":30,"content":"#pragma once\n\n#include \"../includes/consts.hpp\"\n#include \"../includes/major.hpp\"\n#include \"../includes/method.hpp\"\n\nclass Post : public Method {\nprivate:\npublic:\n    Post();\n    ~Post();\n    void identify_command(string line, vector<User*>& users, User*& currentUser, int& lessonID_,\n        vector<Lesson*>& lessons, vector<Course*>& courses, vector<Major*>& majors);\n    void login(Argument id, Argument password, vector<User*>& users, User*& currentUser);\n    void logout(User*& currentUser, string line);\n\n    void handle_course_offer(string line, vector<User*>& users, User*& currentUser, int& lessonID_,\n        vector<Lesson*>& lessons, vector<Course*>& courses, vector<Major*>& majors);\n\n    void handle_post(string line, vector<User*>& users, User*& currentUser, int& lessonID_,\n        vector<Lesson*>& lessons, vector<Course*>& courses, vector<Major*>& majors, istringstream& iss2);\n\n    void course_offer(LessonStruct lesson, int& lessonID, User*& currentUser, vector<Lesson*>& lessons,\n        vector<Course*>& courses, vector<Major*>& majors, vector<User*>& users);\n\n    void handle_login(string line, vector<User*>& users, User*& currentUser, int& lessonID_,\n        vector<Lesson*>& lessons, vector<Course*>& courses, vector<Major*>& majors, istringstream& iss2);\n\n    void handle_connect(string line, vector<User*>& users, User*& currentUser, int& lessonID_,\n        vector<Lesson*>& lessons, vector<Course*>& courses, vector<Major*>& majors, istringstream& iss2);\n\n    void handle_profile_photo(string line, vector<User*>& users, User*& currentUser, int& lessonID_,\n        vector<Lesson*>& lessons, vector<Course*>& courses, vector<Major*>& majors, istringstream& iss2);\n\n    void handle_course_post(string line, vector<User*>& users, User*& currentUser, int& lessonID_,\n        vector<Lesson*>& lessons, vector<Course*>& courses, vector<Major*>& majors, istringstream& iss2);\n\n    void handle_ta_form()\n\n    bool course_exists(string courseId, vector<Course*> courses);\n    bool is_prof(string userId, vector<User*> users);\n    void connect_users(User* currentUser, User* chosenUser);\n    void send_notif_to_all(Notification notif, vector<User*>& users);\n    void read_post_title(string& line, PostStruct& post);\n    void read_post_message(string& line, PostStruct& post);\n    void read_post_image(string& line, PostStruct& post);\n    void handle_title_first(string& line, PostStruct& post);\n    void handle_message_first(string& line, PostStruct& post);\n    void handle_image_first(string& line, PostStruct& post);\n    void send_post_notification(User*& currentUser, PostStruct& post, vector<User*>& users);\n    string read_profile_path(string& line);\n    void handle_channel_post(string line, vector<User*>& users, User*& currentUser, int& lessonID_,\n        vector<Lesson*>& lessons, vector<Course*>& courses, vector<Major*>& majors, istringstream& iss2, PostStruct& post);\n\n    void ta_post(User*& currentUser, Lesson*& chosenLesson, string& line, PostStruct& post, vector<User*>& users);\n    void professor_post(Professor*& professor, Lesson*& chosenLesson, string& line, PostStruct& post, vector<User*>& users, User* &currentUser);\n    void send_course_notif(vector<User*>& users, Lesson*& chosenLesson, User*& currentUser, Notification courseNotif);\n    Notification construct_course_notif(Lesson*& chosenLesson);\n};","filename":"/home/ali3ad3ghi/project6-f1/UTMS-Website/includes/post.hpp","identifier":"Text Change","lineCount":59,"languageId":"cpp"},"failed":false}