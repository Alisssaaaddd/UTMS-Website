{"date":"2024-06-06T10:22:07.892Z","courseId":"17","assignment":"AP-Spring03-CA6-phase2","trace":{"content":"#pragma once\n\n#include \"../includes/consts.hpp\"\n#include \"../includes/error.hpp\"\n#include \"../includes/lesson.hpp\"\n#include \"../includes/media.hpp\"\n\nclass User {\nprotected:\n    string ID;\n    string name;\n    string majorID;\n    MajorData major;\n    string password;\n    bool is_signed_in;\n    int postID;\n    vector<Notification> notifs;\n    vector<Lesson*> activeLessons;\n    vector<PostStruct> posts;\n    vector<User*> connections;\n    string profile_photo_path;\n\npublic:\n    User(MD major_);\n    ~User();\n    string get_id();\n    string get_name();\n    string get_majorID();\n    string get_password();\n    bool signed_in();\n    void login();\n    void logout();\n    bool does_interfere(Lesson* lesson_);\n    void add_lesson(Lesson*& newLesson);\n    void delete_lesson(int lessId_);\n    void add_post(PostStruct& newPost);\n    void delete_post(int postID_);\n    int get_postID();\n    virtual void show_personal_page();\n    virtual void show_personal_info();\n    void show_post(int postID_, vector<Lesson*>& lessons);\n    string lessons_in_line();\n    void show_post_titles();\n    bool have_this_post(int postID_);\n    bool already_connected(string userID_);\n    void connect(User* chosenUser);\n    void receive_notif(Notification notif);\n    void display_all_notifs();\n    void display_notif(Notification notif);\n    void send_notif(Notification postNotif);\n    bool have_this_lesson(int lessId_);\n    bool no_active_lessons();\n    void display_all_lessons();\n    string get_profile_photo_path();\n    void set_profile(string newPath);\n    void show_lesson_info(vector<Lesson*>& lessons, int lessonId_);\n};\n\nclass Student : public User {\nprivate:\n    string semester;\n    StudentData studentStruct;\n\npublic:\n    Student(SD student, MD major_);\n    ~Student();\n    void show_personal_page();\n    void show_personal_info();\n    bool can_take_lesson(Lesson*& lesson_);\n    bool exam_interfers(string examDate_);\n    StudentData get_studentData();\n};\n\nclass Professor : public User {\nprivate:\n    string position;\n    vector<TaForm*> forms;\n\npublic:\n    Professor(PD professor, MD major_);\n    ~Professor();\n    void show_personal_page();\n    void show_personal_info();\n    void add_ta_form(TaForm* newForm);\n    void show_number_of_requests(int formId);\n    void handle_requests_of_form(int formId);\n    void send_reject_notifs(vector<User*>& users, string formId);\n    void send_accept_notifs(vector<User*>& users, string formId);\n    void delete_ta_form(int formId);\n    TaForm* find_ta_form_by_id(int formID);\n    bool have_this_form\n};\n\nclass Manager : public User {\nprivate:\npublic:\n    Manager(MD major_);\n    ~Manager();\n    void show_personal_page();\n    void show_personal_info();\n};","filename":"/home/ali3ad3ghi/project6-f1/UTMS-Website/includes/user.hpp","identifier":"Save Document","languageId":"cpp","version":963,"lineCount":101},"failed":false}