{"date":"2024-05-24T18:51:09.613Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"content":"#include \"../includes/method.hpp\"\n\nMethod::Method()\n{\n}\n\nMethod::~Method()\n{\n}\n\nvoid Method::identify_command(string line, vector<User *> &users, User *&currentUser, int &lessonID_,\n                            vector<Lesson *> &lessons, vector<Course *> &courses, vector<Major *> &majors){\n    \n}\n\nvector<string> Method::split(const string &str, const char delim)\n{\n    vector<string> strings;\n    string::size_type pos = 0;\n    string::size_type prev = 0;\n\n    while ((pos = str.find(delim, prev)) != string::npos)\n    {\n        strings.push_back(str.substr(prev, pos - prev));\n        prev = pos + sizeof(char);\n    }\n    strings.push_back(str.substr(prev));\n    return strings;\n}\n\nCourse* Method::find_course_by_id(vector<Course *> &courses, string courseId){\n    for(Course* c: courses){\n        if(c->get_CID()==courseId){\n            return c;\n        }\n    }\n}\n\nUser* Method::find_user_by_id(string id ,vector<User*> &users){\n    for(User* u: users){\n        if(u->get_id()==id){\n            return u;\n        }\n    }\n}\n\nbool Method::can_convert_to_int(const std::string &str)\n{\n    try\n    {\n        size_t pos;\n        std::stoi(str, &pos);\n\n        if (pos == str.length())\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    catch (const std::exception &)\n    {\n        return false;\n    }\n}","filename":"/home/ali3ad3ghi/project6-f1/UTMS-Website/src/method.cpp","identifier":"Save Document","languageId":"cpp","version":104,"lineCount":67},"failed":true}